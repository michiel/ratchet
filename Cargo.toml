[workspace]
members = [
    "ratchet-interfaces", # Core interfaces - NEW for breaking circular deps
    "ratchet-api-types",  # Unified API types for REST and GraphQL
    "ratchet-web",        # Reusable web middleware and utilities
    # "ratchet-error-middleware", # Shared error handling middleware - TEMPORARILY DISABLED for direct implementation
    "ratchet-rest-api",   # REST API implementation with dependency injection
    "ratchet-graphql-api", # GraphQL API implementation with dependency injection
    "ratchet-server",     # Unified server combining REST and GraphQL APIs
    "ratchet-core",
    "ratchet-runtime",
    "ratchet-storage", 
    "ratchet-ipc",
    "ratchet-resilience",
    "ratchet-caching",
    "ratchet-plugins",
    "ratchet-execution", # Extracted execution engine
    "ratchet-http",     # HTTP client functionality
    "ratchet-js",       # JavaScript execution engine
    "ratchet-logging",  # Structured logging infrastructure
    "ratchet-output",   # Output destination system
    "ratchet-mcp",      # New MCP implementation
    # "ratchet-lib",      # REMOVED - migrated to modular components
    "ratchet-cli-tools", # CLI tools and utilities (extracted from ratchet-lib)
    "ratchet-cli", "ratchet-config", "ratchet-plugin", "ratchet-registry",
    "tests", # Integration tests
]

resolver = "2"

# Workspace-level dependencies shared by all crates
[workspace.dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# Latest tokio version
tokio = { version = "1.45", features = ["rt", "rt-multi-thread", "macros", "sync", "time", "io-util", "io-std", "net", "fs", "signal", "process"] }
clap = { version = "4.5", features = ["derive"] }
thiserror = "1.0"
anyhow = "1.0"
log = "0.4"
env_logger = "0.10"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-appender = "0.2"
lazy_static = "1.4"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.17", features = ["v4", "serde"] }
# Latest SQLx version
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid"], default-features = false }
# Update getrandom for better performance and security
getrandom = "0.3"
# Upgrade to latest tower and axum for enhanced middleware support
tower = { version = "0.5", default-features = false, features = ["util", "timeout", "limit", "load-shed", "steer"] }
# Upgrade to axum 0.8 for latest features and performance improvements
axum = { version = "0.8", default-features = false, features = ["http1", "http2", "json", "original-uri", "form", "matched-path", "tokio", "query", "macros"] }
tower-http = { version = "0.5", features = ["cors", "trace", "timeout", "limit", "fs"] }
# Update GraphQL to 7.0 for Axum 0.8 compatibility
async-graphql = { version = "7.0", features = ["uuid", "chrono", "graphiql"], default-features = false }
async-graphql-axum = "7.0"
# Latest reqwest version
reqwest = { version = "0.12", features = ["json", "stream", "rustls-tls"], default-features = false }
url = "2.5"
async-trait = "0.1"
tokio-stream = "0.1"
# Consolidate dependency versions
jsonschema = "0.18"
base64 = "0.22"
http = "1.0"
http-body = "1.0"
hyper = "1.0"
lru = "0.10"
ahash = "0.8"
fastrand = "2.0"

# Workspace-level configuration for targets
[workspace.package]
version = "0.4.7"  # Common version for all crates
authors = ["Michiel Kalkman <michiel@nosuchtype.com>"]
edition = "2021"
rust-version = "1.85"
license = "MIT OR Apache-2.0"
repository = "https://github.com/michiel/ratchet-workspace"

# Speed up compilation in debug mode
[profile.dev]
opt-level = 1          # Slight optimization for dependencies
debug = 1              # Reduced debug info for faster builds
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
codegen-units = 512    # More parallelism for faster builds

# Fast development profile for rapid iteration
[profile.dev-fast]
inherits = "dev"
opt-level = 0
debug = 0              # Minimal debug info
codegen-units = 1024   # Maximum parallelism

# Optimize for release builds
[profile.release]
opt-level = 3
debug = false
debug-assertions = false
overflow-checks = false
lto = true
panic = 'unwind'
incremental = false
codegen-units = 16

# Create a smaller, optimized build for distributing binaries
[profile.dist]
inherits = "release"
lto = "fat"
codegen-units = 1
opt-level = 3
panic = "abort"
strip = true
