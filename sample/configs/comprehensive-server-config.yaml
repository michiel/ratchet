# Ratchet Comprehensive Server Configuration
# This configuration demonstrates ALL available server configuration options
# with defaults, variations, and comprehensive documentation for each setting

# =============================================================================
# EXECUTION CONFIGURATION
# Controls task execution behavior, timeouts, and validation
# =============================================================================
execution:
  # Maximum time a single task can run (default: 300 seconds)
  max_execution_duration: 300
  
  # Whether to validate task schemas before execution (default: true)
  validate_schemas: true
  
  # Maximum number of concurrent tasks (default: 10)
  max_concurrent_tasks: 10
  
  # Grace period before forceful termination (default: 30 seconds)
  timeout_grace_period: 30
  
  # Variables for HTTP fetch operations
  fetch_variables:
    url_var: "__fetch_url"          # Variable name for URL (default)
    params_var: "__fetch_params"    # Variable name for parameters (default)
    body_var: "__fetch_body"        # Variable name for request body (default)
    result_var: "__http_result"     # Variable name for response (default)
    temp_result_var: "__temp_result" # Variable name for temporary results (default)

# =============================================================================
# HTTP CLIENT CONFIGURATION
# Controls HTTP client behavior for outbound requests from tasks
# =============================================================================
http:
  # Request timeout in seconds (default: 30)
  timeout: 30
  
  # Maximum number of redirects to follow (default: 10)
  max_redirects: 10
  
  # User agent string for HTTP requests (default: "Ratchet/1.0")
  user_agent: "Ratchet-Server/1.0"
  
  # Whether to verify SSL certificates (default: true)
  verify_ssl: true
  
  # Connection pool settings
  pool_max_connections: 100        # Maximum connections in pool (default: 100)
  pool_connection_timeout: 10      # Connection timeout in seconds (default: 10)
  pool_idle_timeout: 60           # Idle connection timeout (default: 60)

# =============================================================================
# CACHING CONFIGURATION
# Controls task content and result caching behavior
# =============================================================================
cache:
  # Whether caching is enabled (default: true)
  enabled: true
  
  # Task-specific cache settings
  task_cache:
    # Maximum number of tasks to cache (default: 500)
    task_content_cache_size: 500
    
    # Cache TTL for task content in seconds (default: 3600)
    task_content_ttl: 3600
    
    # Whether to cache task execution results (default: false)
    cache_execution_results: false
  
  # Result cache settings
  result_cache:
    # Maximum size in MB for result cache (default: 100)
    max_size_mb: 100
    
    # Default TTL for cached results in seconds (default: 1800)
    default_ttl: 1800
    
    # Maximum number of cached results (default: 1000)
    max_entries: 1000

# =============================================================================
# LOGGING CONFIGURATION
# Controls application logging behavior and destinations
# =============================================================================
logging:
  # Log level: trace, debug, info, warn, error (default: info)
  level: info
  
  # Log format: text, json (default: text)
  format: text
  
  # Whether to use structured logging (default: false)
  structured: false
  
  # Log destination: stdout, stderr, file (default: stdout)
  destination: stdout
  
  # File path for file destination (required if destination is file)
  file_path: "/var/log/ratchet/ratchet.log"
  
  # Context enrichment settings
  context:
    enabled: true                    # Enable context enrichment (default: true)
    include_file_location: false     # Include file/line info (default: false)
    include_thread: false           # Include thread ID (default: false)
    include_target: false           # Include log target (default: false)
    max_context_size: 1000          # Max context size in chars (default: 1000)
  
  # Sensitive data filtering
  filter_patterns:
    - "password"
    - "secret"
    - "token"
    - "key"
    - "auth"
  
  # Log enrichment settings
  enrichment:
    enabled: false                   # Enable log enrichment (default: false)
    include_hostname: false         # Include hostname (default: false)
    include_process_id: false       # Include PID (default: false)
    include_thread_id: false        # Include thread ID (default: false)
    include_session_id: false       # Include session ID (default: false)
    include_task_metadata: false    # Include task metadata (default: false)
    include_execution_context: false # Include execution context (default: false)

# =============================================================================
# OUTPUT CONFIGURATION
# Controls where and how task execution results are delivered
# =============================================================================
output:
  # Maximum concurrent output deliveries (default: 10)
  max_concurrent_deliveries: 10
  
  # Default timeout for output delivery in seconds (default: 30)
  default_timeout: 30
  
  # Whether to validate destinations on startup (default: true)
  validate_on_startup: true
  
  # Global destinations applied to all task executions
  global_destinations:
    # Filesystem destination example
    - name: "local-logs"
      description: "Local filesystem logging"
      destination:
        type: "filesystem"
        path: "/tmp/ratchet/logs/{date}/{task_name}-{execution_id}.json"
        format: "json"              # json, text, csv (default: json)
        permissions: "644"          # File permissions (default: 644)
        create_dirs: true          # Create directories if missing (default: true)
        overwrite: false           # Overwrite existing files (default: false)
        backup_existing: false     # Backup before overwrite (default: false)
    
    # Webhook destination example
    - name: "webhook-notifications"
      description: "HTTP webhook for notifications"
      destination:
        type: "webhook"
        url: "https://hooks.example.com/ratchet"
        method: "POST"             # HTTP method (default: POST)
        headers:
          "Content-Type": "application/json"
          "X-Service": "ratchet"
        timeout_seconds: 30        # Request timeout (default: 30)
        auth:
          type: "bearer"           # none, basic, bearer (default: none)
          token: "${WEBHOOK_TOKEN}" # Token for bearer auth
          # username: "user"       # For basic auth
          # password: "pass"       # For basic auth
    
    # Database destination example (hypothetical)
    - name: "database-audit"
      description: "Database audit logging"
      destination:
        type: "database"
        connection_string: "postgresql://user:pass@localhost/audit"
        table_name: "execution_log"
        batch_size: 100            # Batch inserts (default: 1)
        flush_interval: 60         # Flush interval in seconds (default: 60)
    
    # S3 destination example (hypothetical)
    - name: "s3-archive"
      description: "S3 archival storage"
      destination:
        type: "s3"
        bucket: "ratchet-executions"
        key_template: "logs/{year}/{month}/{day}/{execution_id}.json"
        region: "us-east-1"
        access_key_id: "${AWS_ACCESS_KEY_ID}"
        secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
        server_side_encryption: "AES256" # Encryption at rest
  
  # Default retry policy for failed deliveries
  default_retry_policy:
    max_attempts: 3              # Maximum retry attempts (default: 3)
    initial_delay_ms: 1000       # Initial retry delay (default: 1000)
    max_delay_ms: 30000         # Maximum retry delay (default: 30000)
    backoff_multiplier: 2.0     # Exponential backoff multiplier (default: 2.0)

# =============================================================================
# SERVER CONFIGURATION
# Controls the main HTTP API server and database connectivity
# =============================================================================
server:
  # Server bind address (default: "127.0.0.1")
  bind_address: "0.0.0.0"
  
  # Server port (default: 8080)
  port: 8080
  
  # Request timeout in seconds (default: 30)
  request_timeout: 30
  
  # Maximum request size in bytes (default: 1MB)
  max_request_size: 1048576
  
  # Enable CORS (default: false)
  enable_cors: true
  
  # CORS origins (default: ["*"])
  cors_origins:
    - "http://localhost:3000"
    - "https://app.example.com"
  
  # Database configuration
  database:
    # Database URL (default: "sqlite::memory:")
    url: "sqlite:./ratchet.db"
    
    # Alternative database examples:
    # url: "postgresql://user:pass@localhost/ratchet"
    # url: "mysql://user:pass@localhost/ratchet"
    
    # Maximum connections in pool (default: 10)
    max_connections: 10
    
    # Connection timeout in seconds (default: 30)
    connection_timeout: 30
    
    # Connection idle timeout in seconds (default: 600)
    idle_timeout: 600
    
    # Connection maximum lifetime in seconds (default: 3600)
    max_lifetime: 3600
    
    # Enable SQL query logging (default: false)
    log_queries: false
    
    # Migration settings
    auto_migrate: true           # Run migrations on startup (default: true)
    migration_timeout: 300       # Migration timeout in seconds (default: 300)
  
  # Authentication configuration
  auth:
    # JWT secret for token signing (required for auth)
    jwt_secret: "${JWT_SECRET}"
    
    # Token expiration in seconds (default: 3600)
    token_expiration: 3600
    
    # Token issuer (default: "ratchet")
    token_issuer: "ratchet"
    
    # Token audience (default: "ratchet")
    token_audience: "ratchet"
    
    # Algorithm for JWT signing (default: "HS256")
    jwt_algorithm: "HS256"
  
  # TLS configuration (optional)
  tls:
    # Enable TLS (default: false)
    enabled: false
    
    # Certificate file path
    cert_file: "/etc/ssl/certs/ratchet.crt"
    
    # Private key file path
    key_file: "/etc/ssl/private/ratchet.key"
    
    # CA certificate file (for client verification)
    ca_file: "/etc/ssl/certs/ca.crt"
    
    # Require client certificates (default: false)
    require_client_cert: false
  
  # Rate limiting configuration
  rate_limiting:
    # Enable rate limiting (default: false)
    enabled: false
    
    # Requests per minute (default: 100)
    requests_per_minute: 100
    
    # Burst allowance (default: 10)
    burst_allowance: 10
    
    # Rate limit by IP (default: true)
    by_ip: true
    
    # Rate limit by user (default: false)
    by_user: false

# =============================================================================
# MCP CONFIGURATION
# Controls the Model Context Protocol server for LLM integration
# =============================================================================
mcp:
  # Whether MCP server is enabled (default: false)
  enabled: true
  
  # MCP transport protocol: stdio, sse, websocket (default: stdio)
  transport: "sse"
  
  # Server configuration (for sse/websocket transports)
  server:
    # Host to bind to (default: "127.0.0.1")
    host: "0.0.0.0"
    
    # Port to bind to (default: 8090)
    port: 8090
    
    # Metrics port for monitoring (default: none)
    metrics_port: 9090
    
    # Enable CORS for web clients (default: false)
    enable_cors: true
    
    # CORS origins (default: ["*"])
    cors_origins:
      - "https://claude.ai"
      - "http://localhost:3000"
    
    # TLS configuration
    tls:
      # Certificate file path
      cert_file: "/etc/ssl/certs/mcp.crt"
      
      # Private key file path
      key_file: "/etc/ssl/private/mcp.key"
      
      # CA certificate file
      ca_file: "/etc/ssl/certs/ca.crt"
      
      # Require client certificates (default: false)
      require_client_cert: false
  
  # Authentication configuration
  authentication:
    # Authentication method: none, api_key, jwt, oauth2 (default: none)
    method: "api_key"
    
    # API key configuration
    api_key:
      # Header name for API key (default: "Authorization")
      header_name: "Authorization"
      
      # Prefix for API key value (default: "Bearer")
      prefix: "Bearer"
      
      # Valid API keys with permissions
      keys:
        "dev-key-12345":
          name: "Development Client"
          description: "Local development access"
          permissions:
            can_execute_tasks: true
            can_read_logs: true
            can_read_traces: false
            can_access_system_info: false
            allowed_task_patterns:
              - "test-*"
              - "dev-*"
            denied_task_patterns:
              - "*-production"
          created_at: "2024-01-01T00:00:00Z"
          expires_at: "2024-12-31T23:59:59Z"
          active: true
          allowed_ips:
            - "127.0.0.1"
            - "192.168.1.0/24"
    
    # JWT configuration
    jwt:
      # JWT secret or public key file (required for JWT auth)
      secret_or_key_file: "/etc/ratchet/jwt/public.pem"
      
      # JWT algorithm (default: "HS256")
      algorithm: "HS256"
      
      # Expected issuer (optional)
      issuer: "https://auth.example.com"
      
      # Expected audience (optional)
      audience: "ratchet-mcp"
      
      # Token expiration in seconds (default: 3600)
      expiration_seconds: 3600
      
      # Clock skew allowance in seconds (default: 30)
      clock_skew_seconds: 30
    
    # OAuth2 configuration
    oauth2:
      # OAuth2 issuer URL
      issuer_url: "https://accounts.google.com"
      
      # Client ID
      client_id: "${OAUTH2_CLIENT_ID}"
      
      # Client secret
      client_secret: "${OAUTH2_CLIENT_SECRET}"
      
      # Required scopes
      required_scopes:
        - "openid"
        - "profile"
        - "ratchet.access"
      
      # JWKS URI for token verification
      jwks_uri: "https://www.googleapis.com/oauth2/v3/certs"
    
    # Session configuration
    session:
      # Session timeout in seconds (default: 3600)
      timeout_seconds: 3600
      
      # Maximum sessions per client (default: 5)
      max_sessions_per_client: 5
      
      # Session cleanup interval in seconds (default: 300)
      cleanup_interval_seconds: 300
      
      # Whether sessions persist across restarts (default: false)
      persistent: false
  
  # Security configuration
  security:
    # Rate limiting settings
    rate_limiting:
      # Global requests per minute (default: 1000)
      global_per_minute: 1000
      
      # Execute task requests per minute (default: 100)
      execute_task_per_minute: 100
      
      # Get logs requests per minute (default: 500)
      get_logs_per_minute: 500
      
      # Get traces requests per minute (default: 100)
      get_traces_per_minute: 100
      
      # Rate limiting algorithm: token_bucket, sliding_window (default: token_bucket)
      algorithm: "token_bucket"
      
      # Burst allowance (default: 10)
      burst_allowance: 10
    
    # Request limits
    request_limits:
      # Maximum request size in bytes (default: 1MB)
      max_request_size_bytes: 1048576
      
      # Maximum response size in bytes (default: 10MB)
      max_response_size_bytes: 10485760
      
      # Maximum connections per IP (default: 10)
      max_connections_per_ip: 10
      
      # Maximum concurrent executions per client (default: 5)
      max_concurrent_executions_per_client: 5
      
      # Maximum execution time in seconds (default: 300)
      max_execution_time_seconds: 300
    
    # IP filtering
    ip_filtering:
      # Enable IP filtering (default: false)
      enabled: false
      
      # Default policy: allow, deny (default: allow)
      default_policy: "allow"
      
      # Allowed IP ranges (CIDR notation)
      allowed_ranges:
        - "192.168.0.0/16"
        - "10.0.0.0/8"
      
      # Blocked IP ranges
      blocked_ranges:
        - "169.254.0.0/16"  # Link-local
      
      # Trusted proxy IPs (for X-Forwarded-For)
      trusted_proxies:
        - "127.0.0.1"
        - "10.0.1.100"
    
    # Security headers
    headers:
      # Enable security headers (default: true)
      enabled: true
      
      # Content Security Policy
      content_security_policy: "default-src 'self'"
      
      # X-Frame-Options header
      x_frame_options: "DENY"
      
      # X-Content-Type-Options header
      x_content_type_options: "nosniff"
      
      # Strict-Transport-Security header
      strict_transport_security: "max-age=31536000; includeSubDomains"
    
    # Input validation
    validation:
      # Enable strict schema validation (default: true)
      strict_schema_validation: true
      
      # Sanitize input strings (default: true)
      sanitize_strings: true
      
      # Maximum string length (default: 10000)
      max_string_length: 10000
      
      # Maximum array length (default: 1000)
      max_array_length: 1000
      
      # Maximum object depth (default: 10)
      max_object_depth: 10
  
  # Performance configuration
  performance:
    # Connection pooling
    connection_pool:
      # Maximum connections (default: 100)
      max_connections: 100
      
      # Minimum idle connections (default: 10)
      min_idle_connections: 10
      
      # Connection timeout in seconds (default: 30)
      connection_timeout_seconds: 30
      
      # Idle timeout in seconds (default: 300)
      idle_timeout_seconds: 300
      
      # Maximum connection lifetime in seconds (default: 3600)
      max_lifetime_seconds: 3600
    
    # Caching settings
    caching:
      # Enable caching (default: true)
      enabled: true
      
      # Maximum cache size in MB (default: 100)
      max_size_mb: 100
      
      # Default TTL in seconds (default: 3600)
      default_ttl_seconds: 3600
      
      # Cache execution results (default: false)
      cache_execution_results: false
      
      # Cache log queries (default: true)
      cache_log_queries: true
    
    # Background tasks
    background_tasks:
      # Number of worker threads (default: 4)
      worker_threads: 4
      
      # Task queue size (default: 1000)
      queue_size: 1000
      
      # Health check interval in seconds (default: 60)
      health_check_interval_seconds: 60
      
      # Cleanup interval in seconds (default: 300)
      cleanup_interval_seconds: 300
    
    # Monitoring and metrics
    monitoring:
      # Enable monitoring (default: false)
      enabled: false
      
      # Metrics collection interval in seconds (default: 60)
      collection_interval_seconds: 60
      
      # Enable metrics export (default: false)
      export_enabled: false
      
      # Metrics export endpoint
      export_endpoint: "http://localhost:9090/metrics"
      
      # Alert thresholds
      alerts:
        # CPU usage threshold percentage (default: 80.0)
        cpu_threshold: 80.0
        
        # Memory usage threshold percentage (default: 85.0)
        memory_threshold: 85.0
        
        # Connection count threshold (default: 90)
        connection_threshold: 90
        
        # Error rate threshold percentage (default: 5.0)
        error_rate_threshold: 5.0
  
  # Tool configuration
  tools:
    # Enable task execution tool (default: true)
    enable_execution: true
    
    # Enable logging tools (default: true)
    enable_logging: true
    
    # Enable monitoring tools (default: false)
    enable_monitoring: false
    
    # Enable debugging tools (default: false)
    enable_debugging: false
    
    # Enable filesystem tools (default: false)
    enable_filesystem: false
    
    # Custom tool configurations
    custom_tools: {}
    
    # Per-tool rate limits (requests per minute)
    tool_rate_limits:
      execute_task: 100          # Task execution requests
      get_logs: 500             # Log retrieval requests
      get_system_info: 10       # System info requests
  
  # Audit configuration
  audit:
    # Enable audit logging (default: false)
    enabled: false
    
    # Audit log level: trace, debug, info, warn, error (default: info)
    level: "info"
    
    # Log all requests (default: false)
    log_all_requests: false
    
    # Log authentication events (default: true)
    log_auth_events: true
    
    # Log permission checks (default: false)
    log_permission_checks: false
    
    # Log performance metrics (default: false)
    log_performance: false
    
    # Log rotation settings
    rotation:
      # Maximum file size in MB (default: 100)
      max_size_mb: 100
      
      # Maximum number of files to keep (default: 10)
      max_files: 10
      
      # Compress rotated files (default: true)
      compress: true
    
    # External audit destinations
    external_destinations:
      # Syslog destination
      - type: "syslog"
        address: "localhost:514"
        facility: "local0"
      
      # Webhook destination
      - type: "webhook"
        url: "https://audit.example.com/api/events"
        headers:
          "Content-Type": "application/json"
        auth:
          type: "bearer"
          token: "${AUDIT_TOKEN}"

# =============================================================================
# REGISTRY CONFIGURATION
# Controls task discovery and loading from various sources
# =============================================================================
registry:
  # Registry update configuration
  update_interval: 300           # Check for updates every 5 minutes (default: 300)
  concurrent_updates: 5          # Maximum concurrent update operations (default: 5)
  retry_attempts: 3             # Retry failed updates (default: 3)
  
  # Task sources
  sources:
    # Local filesystem source
    - name: "local-tasks"
      # Polling interval in seconds (default: 60)
      polling_interval: 60
      
      # Source URI
      uri: "file:///opt/ratchet/tasks"
      
      # Source-specific configuration
      config:
        # Watch for file changes (default: true)
        watch_for_changes: true
        
        # Auto-reload on changes (default: true)
        auto_reload: true
        
        # File patterns to include (default: ["*.js", "*.yaml", "*.json"])
        include_patterns:
          - "*.js"
          - "*.yaml"
          - "*.json"
        
        # File patterns to exclude (default: [])
        exclude_patterns:
          - "*.tmp"
          - "*.bak"
        
        # Recursive directory scanning (default: true)
        recursive: true
        
        # Maximum depth for recursive scanning (default: 10)
        max_depth: 10
    
    # Remote HTTP source
    - name: "remote-tasks"
      polling_interval: 300
      uri: "https://tasks.example.com/registry/v1"
      config:
        # Authentication token
        auth_token: "${REGISTRY_AUTH_TOKEN}"
        
        # Verify SSL certificates (default: true)
        verify_ssl: true
        
        # Request timeout in seconds (default: 30)
        timeout: 30
        
        # Verify task signatures (default: false)
        verify_signatures: false
        
        # Required signature algorithm (if verify_signatures is true)
        signature_algorithm: "RS256"
        
        # Public key for signature verification
        public_key_file: "/etc/ratchet/registry-public.pem"
        
        # Cache downloaded tasks (default: true)
        cache_tasks: true
        
        # Cache TTL in seconds (default: 3600)
        cache_ttl: 3600
        
        # Maximum cache size in MB (default: 100)
        max_cache_size: 100
    
    # Git repository source
    - name: "git-tasks"
      polling_interval: 600
      uri: "https://github.com/example/ratchet-tasks.git"
      config:
        # Git branch to use (default: "main")
        branch: "main"
        
        # Authentication for private repositories
        auth:
          # Authentication type: none, token, ssh (default: none)
          type: "token"
          
          # Personal access token for HTTPS
          token: "${GIT_TOKEN}"
          
          # SSH key file for SSH authentication
          # ssh_key_file: "/etc/ratchet/git-ssh-key"
          
          # SSH key passphrase
          # ssh_passphrase: "${SSH_PASSPHRASE}"
        
        # Subdirectory within repository (default: "")
        subdirectory: "tasks"
        
        # Clone depth for shallow clones (default: none)
        depth: 1
        
        # Task file patterns
        include_patterns:
          - "**/*.js"
          - "**/*.yaml"
        
        # Verify commit signatures (default: false)
        verify_signatures: false
    
    # Database source (hypothetical)
    - name: "database-tasks"
      polling_interval: 180
      uri: "postgresql://user:pass@db.example.com/tasks"
      config:
        # Database table containing tasks
        table_name: "ratchet_tasks"
        
        # Query to fetch tasks
        query: "SELECT name, content, version FROM ratchet_tasks WHERE active = true"
        
        # Connection pool settings
        max_connections: 5
        connection_timeout: 30
        
        # Task versioning support
        version_column: "version"
        
        # Enable change detection
        enable_change_detection: true
        change_detection_column: "updated_at"

# =============================================================================
# ENVIRONMENT VARIABLE REFERENCE
# All configuration values can be overridden using environment variables
# with the RATCHET_ prefix. Examples:
# 
# RATCHET_SERVER_PORT=9000               # Override server.port
# RATCHET_DATABASE_URL=postgresql://...  # Override server.database.url
# RATCHET_MCP_ENABLED=true              # Override mcp.enabled
# RATCHET_LOG_LEVEL=debug               # Override logging.level
# RATCHET_CACHE_ENABLED=false           # Override cache.enabled
# =============================================================================