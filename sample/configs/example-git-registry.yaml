# Example configuration for Git+HTTP task repositories
# This configuration demonstrates how to use Git repositories as task sources

# Server settings
server:
  host: "127.0.0.1"
  port: 8080
  
  # Database configuration
  database:
    url: "sqlite::memory:"
    max_connections: 10
    connection_timeout: 30

# Registry configuration with Git sources
registry:
  sources:
    # Public GitHub repository (no authentication required)
    - name: "community-tasks"
      uri: "https://github.com/michiel/ratchet-repo-samples"
      source_type: "git"
      enabled: true
      polling_interval: "15m"
      config:
        git:
          git_ref: "main"
          shallow: true
          depth: 1
          sync_strategy: "fetch"
          timeout: "120s"
          cache_ttl: "1h"
          
    # Private repository with token authentication
    - name: "corporate-tasks"
      uri: "https://github.com/corp/ratchet-tasks.git"
      source_type: "git"
      enabled: true
      auth_name: "github_token"
      polling_interval: "10m"
      config:
        git:
          git_ref: "production"
          subdirectory: "approved-tasks"
          shallow: true
          verify_signatures: false
          allowed_refs:
            - "production"
            - "release/*"
          timeout: "300s"
          max_repo_size: "50MB"
          cache_ttl: "30m"
          
    # GitLab repository with SSH key
    - name: "gitlab-tasks"
      uri: "git@gitlab.com:corp/automation-tasks.git"
      source_type: "git"
      enabled: true
      auth_name: "gitlab_ssh"
      config:
        git:
          git_ref: "stable" 
          subdirectory: "production"
          sync_strategy: "pull"
          cleanup_on_error: true
          
    # Local development tasks (filesystem fallback)
    - name: "local-dev"
      uri: "file://./sample/js-tasks"
      source_type: "filesystem"
      enabled: true
      config:
        filesystem:
          watch_changes: true
          include_patterns:
            - "**/*.js"
            - "**/*.json"

  # Default polling interval for all sources
  default_polling_interval: "5m"
  
  # Cache configuration
  cache:
    enabled: true
    ttl: "1h"
    max_entries: 1000

  # Authentication configurations
  auth:
    # GitHub Personal Access Token
    github_token:
      type: "gittoken"
      token: "${GITHUB_TOKEN}"
      
    # GitLab SSH Key
    gitlab_ssh:
      type: "sshkey"
      private_key_path: "/home/user/.ssh/id_rsa"
      passphrase: "${SSH_PASSPHRASE}"
      
    # GitHub App (for enterprise)
    github_app:
      type: "githubapp"
      app_id: "${GITHUB_APP_ID}"
      private_key_path: "/etc/ratchet/github-app.pem"
      installation_id: "${GITHUB_INSTALLATION_ID}"

# Execution settings
execution:
  max_execution_duration: 300
  validate_schemas: true

# HTTP client settings for Git over HTTPS
http:
  timeout: 30
  max_redirects: 10
  user_agent: "Ratchet/1.0"
  verify_ssl: true

# Logging configuration
logging:
  level: "info"
  format: "json"
  
# Optional MCP server for LLM integration
mcp_api:
  enabled: true
  sse_enabled: true
  host: "127.0.0.1"
  port: 8081
  endpoint: "/mcp"