# Ratchet MCP Server Configuration
# This configuration is optimized for Claude Desktop integration

# Execution settings
execution:
  max_execution_duration: 300  # 5 minutes max per task
  validate_schemas: true
  fetch_variables:
    url_var: "__fetch_url"
    params_var: "__fetch_params"
    body_var: "__fetch_body"
    result_var: "__http_result"
    temp_result_var: "__temp_result"

# HTTP client settings
http:
  timeout: 30
  max_redirects: 5
  user_agent: "Ratchet-Claude-MCP/1.0"
  verify_ssl: true

# Cache configuration
cache:
  task_content_cache_size: 1000
  enabled: true
  ttl: 3600  # 1 hour

# Logging configuration
logging:
  level: info
  format: json
  sinks:
    - type: console
      level: info
      use_json: false
    - type: file
      level: debug
      path: "./logs/ratchet-mcp.log"
      max_size: 10485760  # 10MB
      max_backups: 5

# MCP Server Configuration
mcp:
  enabled: true
  server:
    transport: "stdio"
    database:
      url: "sqlite:./ratchet-mcp.db"
      max_connections: 10
      connection_timeout: 30
    
  # Authentication for Claude Desktop
  authentication:
    method: "api_key"
    api_key:
      header_name: "Authorization"
      prefix: "Bearer"
      keys:
        # Production key for Claude Desktop
        "claude-desktop-prod-key-2025":
          name: "Claude Desktop Production"
          description: "Claude Desktop application production access"
          permissions:
            can_execute_tasks: true
            can_read_logs: true
            can_read_traces: true
            can_access_system_info: true
            allowed_task_patterns: ["*"]
            denied_task_patterns: []
          created_at: "2025-01-01T00:00:00Z"
          active: true
          allowed_ips: []
        
        # Development key for testing
        "claude-desktop-dev-key-2025":
          name: "Claude Desktop Development"
          description: "Claude Desktop development and testing"
          permissions:
            can_execute_tasks: true
            can_read_logs: true
            can_read_traces: true
            can_access_system_info: true
            allowed_task_patterns: ["*"]
            denied_task_patterns: []
          created_at: "2025-01-01T00:00:00Z"
          active: true
          allowed_ips: []

  # Security settings
  security:
    rate_limiting:
      execute_task_per_minute: 120
      batch_execute_per_minute: 30
      global_per_minute: 1000
    
    request_size_limit: 10485760  # 10MB
    response_size_limit: 52428800  # 50MB
    
  # Tool availability
  tools:
    enable_execution: true
    enable_logging: true
    enable_monitoring: true
    enable_debugging: true
    enable_filesystem: false
    enable_batch: true
    enable_progress: true

  # Batch processing configuration
  batch:
    max_batch_size: 100
    max_parallel: 10
    default_timeout_ms: 300000  # 5 minutes
    enable_dependencies: true
    enable_progress: true

# Task Registry Configuration
registry:
  sources:
    # Local development tasks
    - name: "local-tasks"
      uri: "file://./sample/js-tasks"
      config:
        watch_for_changes: true
        auto_reload: true
        scan_interval: 10
    
    # Production tasks (if using remote registry)
    # - name: "production-tasks"
    #   uri: "https://registry.example.com/tasks"
    #   config:
    #     api_key: "${REGISTRY_API_KEY}"
    #     cache_duration: 3600

# Output delivery configuration
output:
  max_concurrent_deliveries: 20
  default_timeout: 60
  validate_on_startup: true
  retry_policy:
    max_attempts: 3
    initial_delay: 1
    max_delay: 30
    multiplier: 2

# Server configuration
server:
  bind_address: "127.0.0.1"
  port: 8080
  database:
    url: "sqlite:./ratchet-server.db"
    max_connections: 20
    connection_timeout: 30
    
  # API settings
  api:
    enable_graphql: true
    enable_rest: true
    enable_websocket: false
    
  # CORS settings for web UI access
  cors:
    allowed_origins: ["http://localhost:*", "http://127.0.0.1:*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization"]
    max_age: 3600

# Worker process configuration
workers:
  count: 4  # Number of worker processes
  restart_on_failure: true
  max_restarts: 5
  restart_delay: 5
  
# Performance tuning
performance:
  # Task execution
  task_queue_size: 1000
  execution_timeout_grace_period: 10
  
  # Memory limits
  max_memory_per_execution: 536870912  # 512MB
  
  # Connection pooling
  http_connection_pool_size: 50
  http_keepalive_timeout: 90

# Development/debugging features
debug:
  enable_execution_recording: false
  enable_performance_profiling: false
  log_sql_queries: false
  
# Health check configuration
health:
  check_interval: 30
  database_timeout: 5
  worker_timeout: 10