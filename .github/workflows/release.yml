on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      profile:
        description: 'Build profile'
        required: false
        default: 'release'
        type: choice
        options:
          - debug
          - release

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:

          - os-name: linux-x86_64
            runs-on: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os-name: linux-aarch64
            runs-on: ubuntu-24.04
            target: aarch64-unknown-linux-musl

          - os-name: windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc

          - os-name: macos-x86_64
            runs-on: macOS-latest
            target: x86_64-apple-darwin

          - os-name: macos-aarch64
            runs-on: macOS-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up dependencies (Ubuntu only)
        if: startsWith(matrix.platform.runs-on, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config musl-dev perl perl-modules-5.* libfindbin-libs-perl
      - name: Set up dependencies (Windows only)
        if: startsWith(matrix.platform.runs-on, 'windows-')
        run: |
          # Install Strawberry Perl for vendored OpenSSL builds
          choco install strawberryperl -y
          # Add Strawberry Perl to PATH for this job
          echo "C:\strawberry\perl\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\strawberry\c\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Set up dependencies (macOS only)
        if: startsWith(matrix.platform.runs-on, 'macOS-')
        run: |
          # Verify perl is available (usually pre-installed)
          perl -e "use FindBin;" && echo "Perl with FindBin ready for vendored builds"
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        env:
          OPENSSL_STATIC: "1"
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--locked --release -p ratchet --features git"
          strip: true
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: ratchet
          target: ${{ matrix.platform.target }}
          changes-file: "CHANGES.md"
          extra-files: |
            docs/LLM_TASK_DEVELOPMENT.md
            docs/CLI_USAGE.md
          archive-name: "ratchet-${{ github.event.release.tag_name }}-${{ matrix.platform.os-name }}"
