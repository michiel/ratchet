[package]
name = "ratchet-registry"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
# Core dependencies
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
async-trait = { workspace = true }
tokio = { workspace = true, features = ["fs", "time", "rt", "macros"] }
chrono = { workspace = true }
uuid = { workspace = true }

# Ratchet dependencies
ratchet-core = { path = "../ratchet-core" }
ratchet-storage = { path = "../ratchet-storage" }
ratchet-http = { path = "../ratchet-http" }
ratchet-config = { path = "../ratchet-config" }
ratchet-caching = { path = "../ratchet-caching" }

# Registry-specific dependencies
notify = { workspace = true, features = ["serde"], optional = true }  # File watching
walkdir = { workspace = true, optional = true }                       # Directory traversal
zip = { version = "0.6", optional = true }                           # ZIP file handling
jsonschema = { workspace = true, optional = true }                   # Schema validation
regex = { workspace = true }                                            # Pattern matching
url = { workspace = true }                                            # URL handling

# Git support dependencies  
gix = { workspace = true, optional = true }                           # Pure Rust Git implementation with rustls support
dirs = { workspace = true, optional = true }                          # Cross-platform directories
md5 = { version = "0.7", optional = true }                           # URL hashing for cache paths

[features]
default = ["filesystem", "http", "git", "watcher"]
filesystem = ["dep:walkdir", "dep:zip"]
http = []
git = ["dep:gix", "dep:dirs", "dep:md5"]  # Pure Rust Git with rustls
gitoxide = ["git"]  # Alias for compatibility (same as git)
watcher = ["dep:notify"]
validation = ["dep:jsonschema"]

[dev-dependencies]
tokio-test = { workspace = true }
tempfile = { workspace = true }
